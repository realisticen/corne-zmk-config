/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        shm: slow_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOW_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <500>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tds: tap_dance_next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NEXT_PREV";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_NEXT>, <&kp C_PREVIOUS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R           &kp T                       &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F           &kp G                       &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&mo 2      &kp Z  &kp X  &kp C     &kp V           &kp B                       &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                         &kp LGUI  &kp LEFT_SHIFT  &shm LS(LA(LCTRL)) SPACE    &kp RET  &mo 1  &sk LALT
            >;
        };

        numbers_layer {
            bindings = <
&kp ESC    &hm F1 N1     &hm F2 N2     &hm F3 N3     &hm F4 N4       &hm F5 N5    &hm F6 N6  &hm F7 N7      &hm F8 N8    &hm F9 N9  &hm F10 N0  &kp BSPC
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none           &none        &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp F11     &kp DEL
&mo 2      &none         &bt BT_CLR    &none         &none           &none        &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp F12     &none
                                       &trans        &kp LEFT_SHIFT  &kp SPACE    &kp RET    &trans         &kp RALT
            >;
        };

        symbols_layer {
            bindings = <
&kp ESC    &kp EXCL      &kp AT             &kp HASH      &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp CAPSLOCK  &kp EXCL           &kp RET       &kp PSCRN       &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp PIPE  &kp GRAVE
&trans     &kp F13       &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_PP        &tds         &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp BSLH  &kp TILDE
                                            &trans        &kp LEFT_SHIFT  &kp ENTER    &kp RET    &trans     &kp RALT
            >;
        };

        gaming_layer {
            bindings = <
&kp TAB         &kp T  &kp Q  &kp W      &kp E  &kp R        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp G  &kp A  &kp S      &kp D  &kp F        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &tog 3
&kp LCTRL       &kp B  &kp Z  &kp X      &kp C  &kp V        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LALT
            >;
        };
    };
};
